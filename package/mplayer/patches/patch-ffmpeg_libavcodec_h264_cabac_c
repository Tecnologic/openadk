--- MPlayer-1.1.1.orig/ffmpeg/libavcodec/h264_cabac.c	2013-05-05 20:11:42.000000000 +0200
+++ MPlayer-1.1.1/ffmpeg/libavcodec/h264_cabac.c	2014-03-27 12:24:39.544699747 +0100
@@ -39,10 +39,6 @@
 #include "h264_mvpred.h"
 #include "golomb.h"
 
-#if ARCH_X86
-#include "x86/h264_i386.h"
-#endif
-
 //#undef NDEBUG
 #include <assert.h>
 
@@ -1652,17 +1648,6 @@ decode_cabac_residual_internal(H264Conte
             index[coeff_count++] = last;\
         }
         const uint8_t *sig_off = significant_coeff_flag_offset_8x8[MB_FIELD];
-#if ARCH_X86 && HAVE_7REGS
-        coeff_count= decode_significance_8x8_x86(CC, significant_coeff_ctx_base, index,
-                                                 last_coeff_ctx_base, sig_off);
-    } else {
-        if (is_dc && chroma422) { // dc 422
-            DECODE_SIGNIFICANCE(7, sig_coeff_offset_dc[last], sig_coeff_offset_dc[last]);
-        } else {
-            coeff_count= decode_significance_x86(CC, max_coeff, significant_coeff_ctx_base, index,
-                                                 last_coeff_ctx_base-significant_coeff_ctx_base);
-        }
-#else
         DECODE_SIGNIFICANCE( 63, sig_off[last], ff_h264_last_coeff_flag_offset_8x8[last] );
     } else {
         if (is_dc && chroma422) { // dc 422
@@ -1670,7 +1655,6 @@ decode_cabac_residual_internal(H264Conte
         } else {
             DECODE_SIGNIFICANCE(max_coeff - 1, last, last);
         }
-#endif
     }
     assert(coeff_count > 0);
 
