--- xfsprogs-3.1.10.orig/fsr/xfs_fsr.c	2012-12-13 22:29:24.000000000 +0100
+++ xfsprogs-3.1.10/fsr/xfs_fsr.c	2013-04-04 16:39:27.000000000 +0200
@@ -35,7 +35,6 @@
 #include <sys/wait.h>
 #include <sys/vfs.h>
 #include <sys/statvfs.h>
-#include <sys/xattr.h>
 
 
 #ifndef XFS_XFLAG_NODEFRAG
@@ -1032,6 +1031,7 @@ fsr_setup_attr_fork(
 	 * use the old method if we have attr1 or the kernel does not yet
 	 * support passing the fork offset in the bulkstat data.
 	 */
+#if 0
 	if (!(fsgeom.flags & XFS_FSOP_GEOM_FLAGS_ATTR2) ||
 	    bstatp->bs_forkoff == 0) {
 		/* attr1 */
@@ -1042,6 +1042,7 @@ fsr_setup_attr_fork(
 		}
 		goto out;
 	}
+#endif
 
 	/* attr2 w/ fork offsets */
 
@@ -1079,6 +1080,7 @@ fsr_setup_attr_fork(
 		 * If there is no attribute, then we need to create one to get
 		 * an attribute fork at the default location.
 		 */
+#if 0
 		if (!tbstat.bs_forkoff) {
 			ret = fsetxattr(tfd, name, "XX", 2, XATTR_CREATE);
 			if (ret) {
@@ -1087,7 +1089,7 @@ fsr_setup_attr_fork(
 			}
 			continue;
 		}
-
+#endif
 		/*
 		 * make a progress check so we don't get stuck trying to extend
 		 * a large btree form attribute fork.
@@ -1126,11 +1128,13 @@ fsr_setup_attr_fork(
 		}
 
 		/* we need to grow the attr fork, so create another attr */
+#if 0
 		ret = fsetxattr(tfd, name, "XX", 2, XATTR_CREATE);
 		if (ret) {
 			fsrprintf(_("could not set ATTR\n"));
 			return -1;
 		}
+#endif
 
 	} while (++i < 100); /* don't go forever */
 
