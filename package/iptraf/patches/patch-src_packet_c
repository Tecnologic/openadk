--- iptraf-3.0.1.orig/src/packet.c	2007-09-25 11:21:18.000000000 +0200
+++ iptraf-3.0.1/src/packet.c	2013-03-04 11:42:52.000000000 +0100
@@ -36,7 +36,6 @@ details.
 #include <linux/if_ether.h>
 #include <linux/netdevice.h>
 #include <linux/if_fddi.h>
-#include <linux/if_tr.h>
 #include <linux/isdn.h>
 #include <linux/sockios.h>
 #include <msgboxes.h>
@@ -136,9 +135,6 @@ unsigned short getlinktype(unsigned shor
     case ARPHRD_PPP:
         result = LINK_PPP;
         break;
-    case ARPHRD_FDDI:
-        result = LINK_FDDI;
-        break;
     case ARPHRD_IEEE802:
     case ARPHRD_IEEE802_TR:
         result = LINK_TR;
@@ -194,36 +190,6 @@ void adjustpacket(char *tpacket, unsigne
         *packet = tpacket + 4;
         *readlen -= 4;
         break;
-    case LINK_FDDI:
-        *packet = tpacket + sizeof(struct fddihdr);
-        *readlen -= sizeof(struct fddihdr);
-
-        /*
-         * Move IP data into an aligned buffer.  96 bytes should be sufficient
-         * for IP and TCP headers with reasonable numbers of options and some
-         * data.
-         */
-
-        memmove(aligned_buf, *packet, min(SNAPSHOT_LEN, *readlen));
-        *packet = aligned_buf;
-        break;
-    case LINK_TR:
-        /*
-         * Token Ring patch supplied by Tomas Dvorak 
-         */
-
-        /*
-         * Get the start of the IP packet from the Token Ring frame.
-         */
-        dataoffset = get_tr_ip_offset(tpacket);
-        *packet = tpacket + dataoffset;
-        *readlen -= dataoffset;
-        /*
-         * Move IP datagram into an aligned buffer.
-         */
-        memmove(aligned_buf, *packet, min(SNAPSHOT_LEN, *readlen));
-        *packet = aligned_buf;
-        break;
     case LINK_IPIP:
         *packet = tpacket;
         break;
