--- mozilla-2.0.orig/xpcom/threads/nsThread.cpp	2011-03-19 00:34:14.000000000 +0100
+++ mozilla-2.0/xpcom/threads/nsThread.cpp	2011-03-27 21:47:15.633370362 +0200
@@ -46,10 +46,13 @@
 #include "prlog.h"
 #include "nsThreadUtilsInternal.h"
 
+#include <features.h>
+
 #define HAVE_UALARM _BSD_SOURCE || (_XOPEN_SOURCE >= 500 ||                 \
                       _XOPEN_SOURCE && _XOPEN_SOURCE_EXTENDED) &&           \
                       !(_POSIX_C_SOURCE >= 200809L || _XOPEN_SOURCE >= 700)
 
+#if !defined(__UCLIBC__)
 #if defined(XP_UNIX) && !defined(ANDROID) && !defined(DEBUG) && HAVE_UALARM \
   && defined(_GNU_SOURCE)
 # define MOZ_CANARY
@@ -59,6 +62,7 @@
 # include <fcntl.h>
 # include "nsXULAppAPI.h"
 #endif
+#endif
 
 #include "mozilla/FunctionTimer.h"
 #if defined(NS_FUNCTION_TIMER) && defined(_MSC_VER)
@@ -562,7 +566,7 @@ void canary_alarm_handler (int signum)
   const char msg[29] = "event took too long to run:\n";
   // use write to be safe in the signal handler
   write(Canary::sOutputFD, msg, sizeof(msg)); 
-  backtrace_symbols_fd(array, backtrace(array, 30), Canary::sOutputFD);
+  //backtrace_symbols_fd(array, backtrace(array, 30), Canary::sOutputFD);
 }
 
 #endif
