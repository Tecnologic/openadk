--- librpcsecgss-0.19.orig/include/rpcsecgss/rpc/auth_gss.h	2009-05-13 23:33:08.000000000 +0200
+++ librpcsecgss-0.19/include/rpcsecgss/rpc/auth_gss.h	2014-05-19 15:34:51.506269269 +0200
@@ -95,34 +95,38 @@ struct rpc_gss_init_res {
 #define MAXSEQ		0x80000000
 
 /* Prototypes. */
-__BEGIN_DECLS
-bool_t	xdr_rpc_gss_cred	__P((XDR *xdrs, struct rpc_gss_cred *p));
-bool_t	xdr_rpc_gss_init_args	__P((XDR *xdrs, gss_buffer_desc *p));
-bool_t	xdr_rpc_gss_init_res	__P((XDR *xdrs, struct rpc_gss_init_res *p));
-bool_t	xdr_rpc_gss_data	__P((XDR *xdrs, xdrproc_t xdr_func,
+#ifdef __cplusplus
+extern "C" {
+#endif
+bool_t	xdr_rpc_gss_cred	(XDR *xdrs, struct rpc_gss_cred *p);
+bool_t	xdr_rpc_gss_init_args	(XDR *xdrs, gss_buffer_desc *p);
+bool_t	xdr_rpc_gss_init_res	(XDR *xdrs, struct rpc_gss_init_res *p);
+bool_t	xdr_rpc_gss_data	(XDR *xdrs, xdrproc_t xdr_func,
 				     caddr_t xdr_ptr, gss_ctx_id_t ctx,
 				     gss_qop_t qop, rpc_gss_svc_t svc,
-				     u_int seq));
+				     u_int seq);
 
-AUTH   *authgss_create		__P((CLIENT *, gss_name_t,
-				     struct rpc_gss_sec *));
-AUTH   *authgss_create_default	__P((CLIENT *, char *, struct rpc_gss_sec *));
-bool_t authgss_service		__P((AUTH *auth, int svc));
-bool_t authgss_get_private_data	__P((AUTH *auth,
-				     struct authgss_private_data *));
-bool_t authgss_free_private_data __P((struct authgss_private_data *pd));
+AUTH   *authgss_create		(CLIENT *, gss_name_t,
+				     struct rpc_gss_sec *);
+AUTH   *authgss_create_default	(CLIENT *, char *, struct rpc_gss_sec *);
+bool_t authgss_service		(AUTH *auth, int svc);
+bool_t authgss_get_private_data	(AUTH *auth,
+				     struct authgss_private_data *);
+bool_t authgss_free_private_data (struct authgss_private_data *pd);
 
 
 
-int     authgss_set_debug_level __P((int new_level));
-void	authgss_log_err		__P((char *format, ...));
-void	authgss_log_dbg		__P((char *format, ...));
-void	authgss_log_status	__P((char *m, OM_uint32 maj_stat,
-				     OM_uint32 min_stat));
-void	authgss_perror		__P((int err, char *msg));
-void	authgss_log_hexdump	__P((const u_char *buf, int len, int offset));
+int     authgss_set_debug_level (int new_level);
+void	authgss_log_err		(char *format, ...);
+void	authgss_log_dbg		(char *format, ...);
+void	authgss_log_status	(char *m, OM_uint32 maj_stat,
+				     OM_uint32 min_stat);
+void	authgss_perror		(int err, char *msg);
+void	authgss_log_hexdump	(const u_char *buf, int len, int offset);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 /* Debugging */
 extern int authgss_debug_level;
