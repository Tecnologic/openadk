--- ppp-2.4.5.orig/pppd/cbcp.c	2009-11-16 23:26:07.000000000 +0100
+++ ppp-2.4.5/pppd/cbcp.c	2014-03-17 16:13:14.000000000 +0100
@@ -50,7 +50,7 @@ static const char rcsid[] = RCSID;
 /*
  * Options.
  */
-static int setcbcp __P((char **));
+static int setcbcp (char **);
 
 static option_t cbcp_option_list[] = {
     { "callback", o_special, (void *)setcbcp,
@@ -61,14 +61,14 @@ static option_t cbcp_option_list[] = {
 /*
  * Protocol entry points.
  */
-static void cbcp_init      __P((int unit));
-static void cbcp_open      __P((int unit));
-static void cbcp_lowerup   __P((int unit));
-static void cbcp_input     __P((int unit, u_char *pkt, int len));
-static void cbcp_protrej   __P((int unit));
-static int  cbcp_printpkt  __P((u_char *pkt, int len,
+static void cbcp_init      (int unit);
+static void cbcp_open      (int unit);
+static void cbcp_lowerup   (int unit);
+static void cbcp_input     (int unit, u_char *pkt, int len);
+static void cbcp_protrej   (int unit);
+static int  cbcp_printpkt  (u_char *pkt, int len,
 				void (*printer) __P((void *, char *, ...)),
-				void *arg));
+				void *arg);
 
 struct protent cbcp_protent = {
     PPP_CBCP,
@@ -94,11 +94,11 @@ cbcp_state cbcp[NUM_PPP];
 
 /* internal prototypes */
 
-static void cbcp_recvreq __P((cbcp_state *us, u_char *pckt, int len));
-static void cbcp_resp __P((cbcp_state *us));
-static void cbcp_up __P((cbcp_state *us));
-static void cbcp_recvack __P((cbcp_state *us, u_char *pckt, int len));
-static void cbcp_send __P((cbcp_state *us, int code, u_char *buf, int len));
+static void cbcp_recvreq (cbcp_state *us, u_char *pckt, int len);
+static void cbcp_resp (cbcp_state *us);
+static void cbcp_up (cbcp_state *us);
+static void cbcp_recvack (cbcp_state *us, u_char *pckt, int len);
+static void cbcp_send (cbcp_state *us, int code, u_char *buf, int len);
 
 /* option processing */
 static int
@@ -227,7 +227,7 @@ static int
 cbcp_printpkt(p, plen, printer, arg)
     u_char *p;
     int plen;
-    void (*printer) __P((void *, char *, ...));
+    void (*printer) (void *, char *, ...);
     void *arg;
 {
     int code, opt, id, len, olen, delay;
